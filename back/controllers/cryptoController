const fs = require('fs');

const read = async () => {
  try {
    const tokensData = JSON.parse(fs.readFileSync('tokensData.json', 'utf-8'));

    const lastTimeUpdated = tokensData.lastTimeUpdated;
    const extractedTokensData = tokensData.tokensData;

    console.log('read Last time updated:', lastTimeUpdated);
    return await extractedTokensData;
  } catch (error) {}
};

const readId = async () => {
  try {
    
    const startTokensData = performance.now();

    const tokensProperties = JSON.parse(
      fs.readFileSync('tokensData.json', 'utf-8')
    );

    const lastTimeUpdated = tokensProperties.lastTimeUpdated;
    console.log('id Last time updated:', lastTimeUpdated);
 
    const endTokensData = performance.now();
    console.log(
      'T ',
      endTokensData - startTokensData,
      'ms'
    );
    const extractedTokensProperties = tokensProperties.tokensProperties;

    return extractedTokensProperties;
  } catch (error) {}
};
const getExtractedData = async (req, res, next) => {
  const sa = await readId();
  res.send(sa);
};
const getTokenById = (req, res, next) => {
  try {
  } catch (error) {
    next(error);
    return;
  }
  const { tokenId } = req.params;
  const tokenItem = tokensData.find((item) => item.Id === tokenId);
  res.send(tokenItem);
};

module.exports = { getExtractedData, getTokenById };
